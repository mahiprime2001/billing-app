"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/dashboard/products/page",{

/***/ "(app-pages-browser)/./app/utils/printUtils.ts":
/*!*********************************!*\
  !*** ./app/utils/printUtils.ts ***!
  \*********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   printThermalLabel: () => (/* binding */ printThermalLabel),\n/* harmony export */   printWithTauriWindow: () => (/* binding */ printWithTauriWindow),\n/* harmony export */   unifiedPrint: () => (/* binding */ unifiedPrint)\n/* harmony export */ });\n/* harmony import */ var _tauri_apps_api_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tauri-apps/api/core */ \"(app-pages-browser)/./node_modules/@tauri-apps/api/core.js\");\n\n/**\n * Wraps the provided HTML content by injecting window.print() on body load.\n * This ensures the native print dialog pops up automatically when rendered.\n * @param html The raw HTML string to print.\n * @returns The wrapped HTML string with print auto-trigger.\n */ function wrapHtmlWithPrint(html) {\n    return '\\n    <!DOCTYPE html>\\n    <html>\\n    <head>\\n      <meta charset=\"utf-8\" />\\n      <title>Print Preview</title>\\n      <style>\\n        /* Optional: Add your print styles here */\\n      </style>\\n    </head>\\n    <body onload=\"window.print();\">\\n      '.concat(html, \"\\n    </body>\\n    </html>\\n  \");\n}\n/**\n * Opens a new Tauri window, writes the provided HTML content to it, and triggers the print dialog.\n * This function is intended for use within the Tauri desktop application.\n * @param htmlContent The HTML string to display and print.\n */ async function printWithTauriWindow(htmlContent) {\n    try {\n        // Wrap the HTML content so print triggers automatically on load\n        const printableHtml = wrapHtmlWithPrint(htmlContent);\n        await (0,_tauri_apps_api_core__WEBPACK_IMPORTED_MODULE_0__.invoke)(\"open_print_window\", {\n            html: printableHtml\n        });\n        console.log(\"Print window opened and print dialog triggered successfully.\");\n    } catch (error) {\n        console.error(\"Failed to open new Tauri window for printing:\", error);\n        throw new Error(\"Failed to open new window for printing.\");\n    }\n}\n/**\n * Handles thermal label printing.\n * @param content The content to print (raw text or label-formatted PDF).\n * @param isThermalPrinter A flag to indicate if the target printer is a thermal printer.\n * @returns A Promise that resolves when the print job is sent.\n */ async function printThermalLabel(content, isThermalPrinter) {\n    if (!isThermalPrinter) {\n        console.warn(\"Attempted to print thermal label to a non-thermal printer.\");\n        throw new Error(\"Not a thermal printer.\");\n    }\n    try {\n        // Call backend command for thermal printing\n        await (0,_tauri_apps_api_core__WEBPACK_IMPORTED_MODULE_0__.invoke)(\"print_thermal_document\", {\n            content\n        });\n        console.log(\"Thermal label content sent to printer successfully.\");\n    } catch (error) {\n        console.error(\"Failed to print thermal label:\", error);\n        throw error;\n    }\n}\n/**\n * Unified printing function that handles different print scenarios.\n * @param options An object containing printing options.\n * @param options.htmlContent Optional HTML content for window-based printing.\n * @param options.thermalContent Optional content for thermal printing.\n * @param options.isThermalPrinter Optional flag to indicate if the target printer is a thermal printer.\n * @returns A Promise that resolves when the print job is completed.\n */ async function unifiedPrint(param) {\n    let { htmlContent, thermalContent, isThermalPrinter = false } = param;\n    if (isThermalPrinter && thermalContent) {\n        await printThermalLabel(thermalContent, true);\n    } else if (htmlContent) {\n        await printWithTauriWindow(htmlContent);\n    } else {\n        throw new Error(\"No printable content provided.\");\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC91dGlscy9wcmludFV0aWxzLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBOEM7QUFFOUM7Ozs7O0NBS0MsR0FDRCxTQUFTQyxrQkFBa0JDLElBQVk7SUFDckMsT0FBTyxpUUFXSSxPQUFMQSxNQUFLO0FBSWI7QUFFQTs7OztDQUlDLEdBQ00sZUFBZUMscUJBQXFCQyxXQUFtQjtJQUM1RCxJQUFJO1FBQ0YsZ0VBQWdFO1FBQ2hFLE1BQU1DLGdCQUFnQkosa0JBQWtCRztRQUN4QyxNQUFNSiw0REFBTUEsQ0FBQyxxQkFBcUI7WUFBRUUsTUFBTUc7UUFBYztRQUN4REMsUUFBUUMsR0FBRyxDQUFDO0lBQ2QsRUFBRSxPQUFPQyxPQUFPO1FBQ2RGLFFBQVFFLEtBQUssQ0FBQyxpREFBaURBO1FBQy9ELE1BQU0sSUFBSUMsTUFBTTtJQUNsQjtBQUNGO0FBRUE7Ozs7O0NBS0MsR0FDTSxlQUFlQyxrQkFBa0JDLE9BQWUsRUFBRUMsZ0JBQXlCO0lBQ2hGLElBQUksQ0FBQ0Esa0JBQWtCO1FBQ3JCTixRQUFRTyxJQUFJLENBQUM7UUFDYixNQUFNLElBQUlKLE1BQU07SUFDbEI7SUFDQSxJQUFJO1FBQ0YsNENBQTRDO1FBQzVDLE1BQU1ULDREQUFNQSxDQUFDLDBCQUEwQjtZQUFFVztRQUFRO1FBQ2pETCxRQUFRQyxHQUFHLENBQUM7SUFDZCxFQUFFLE9BQU9DLE9BQU87UUFDZEYsUUFBUUUsS0FBSyxDQUFDLGtDQUFrQ0E7UUFDaEQsTUFBTUE7SUFDUjtBQUNGO0FBRUE7Ozs7Ozs7Q0FPQyxHQUNNLGVBQWVNLGFBQWEsS0FRbEM7UUFSa0MsRUFDakNWLFdBQVcsRUFDWFcsY0FBYyxFQUNkSCxtQkFBbUIsS0FBSyxFQUt6QixHQVJrQztJQVNqQyxJQUFJQSxvQkFBb0JHLGdCQUFnQjtRQUN0QyxNQUFNTCxrQkFBa0JLLGdCQUFnQjtJQUMxQyxPQUFPLElBQUlYLGFBQWE7UUFDdEIsTUFBTUQscUJBQXFCQztJQUM3QixPQUFPO1FBQ0wsTUFBTSxJQUFJSyxNQUFNO0lBQ2xCO0FBQ0YiLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYWhlbmRyYXJlZGR5L2RldmVsb3Blci9iaWxsaW5nX3N5c3RlbS9iaWxsaW5nLWFwcC9hcHAvdXRpbHMvcHJpbnRVdGlscy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBpbnZva2UgfSBmcm9tIFwiQHRhdXJpLWFwcHMvYXBpL2NvcmVcIjtcblxuLyoqXG4gKiBXcmFwcyB0aGUgcHJvdmlkZWQgSFRNTCBjb250ZW50IGJ5IGluamVjdGluZyB3aW5kb3cucHJpbnQoKSBvbiBib2R5IGxvYWQuXG4gKiBUaGlzIGVuc3VyZXMgdGhlIG5hdGl2ZSBwcmludCBkaWFsb2cgcG9wcyB1cCBhdXRvbWF0aWNhbGx5IHdoZW4gcmVuZGVyZWQuXG4gKiBAcGFyYW0gaHRtbCBUaGUgcmF3IEhUTUwgc3RyaW5nIHRvIHByaW50LlxuICogQHJldHVybnMgVGhlIHdyYXBwZWQgSFRNTCBzdHJpbmcgd2l0aCBwcmludCBhdXRvLXRyaWdnZXIuXG4gKi9cbmZ1bmN0aW9uIHdyYXBIdG1sV2l0aFByaW50KGh0bWw6IHN0cmluZyk6IHN0cmluZyB7XG4gIHJldHVybiBgXG4gICAgPCFET0NUWVBFIGh0bWw+XG4gICAgPGh0bWw+XG4gICAgPGhlYWQ+XG4gICAgICA8bWV0YSBjaGFyc2V0PVwidXRmLThcIiAvPlxuICAgICAgPHRpdGxlPlByaW50IFByZXZpZXc8L3RpdGxlPlxuICAgICAgPHN0eWxlPlxuICAgICAgICAvKiBPcHRpb25hbDogQWRkIHlvdXIgcHJpbnQgc3R5bGVzIGhlcmUgKi9cbiAgICAgIDwvc3R5bGU+XG4gICAgPC9oZWFkPlxuICAgIDxib2R5IG9ubG9hZD1cIndpbmRvdy5wcmludCgpO1wiPlxuICAgICAgJHtodG1sfVxuICAgIDwvYm9keT5cbiAgICA8L2h0bWw+XG4gIGA7XG59XG5cbi8qKlxuICogT3BlbnMgYSBuZXcgVGF1cmkgd2luZG93LCB3cml0ZXMgdGhlIHByb3ZpZGVkIEhUTUwgY29udGVudCB0byBpdCwgYW5kIHRyaWdnZXJzIHRoZSBwcmludCBkaWFsb2cuXG4gKiBUaGlzIGZ1bmN0aW9uIGlzIGludGVuZGVkIGZvciB1c2Ugd2l0aGluIHRoZSBUYXVyaSBkZXNrdG9wIGFwcGxpY2F0aW9uLlxuICogQHBhcmFtIGh0bWxDb250ZW50IFRoZSBIVE1MIHN0cmluZyB0byBkaXNwbGF5IGFuZCBwcmludC5cbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHByaW50V2l0aFRhdXJpV2luZG93KGh0bWxDb250ZW50OiBzdHJpbmcpOiBQcm9taXNlPHZvaWQ+IHtcbiAgdHJ5IHtcbiAgICAvLyBXcmFwIHRoZSBIVE1MIGNvbnRlbnQgc28gcHJpbnQgdHJpZ2dlcnMgYXV0b21hdGljYWxseSBvbiBsb2FkXG4gICAgY29uc3QgcHJpbnRhYmxlSHRtbCA9IHdyYXBIdG1sV2l0aFByaW50KGh0bWxDb250ZW50KTtcbiAgICBhd2FpdCBpbnZva2UoXCJvcGVuX3ByaW50X3dpbmRvd1wiLCB7IGh0bWw6IHByaW50YWJsZUh0bWwgfSk7XG4gICAgY29uc29sZS5sb2coXCJQcmludCB3aW5kb3cgb3BlbmVkIGFuZCBwcmludCBkaWFsb2cgdHJpZ2dlcmVkIHN1Y2Nlc3NmdWxseS5cIik7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcihcIkZhaWxlZCB0byBvcGVuIG5ldyBUYXVyaSB3aW5kb3cgZm9yIHByaW50aW5nOlwiLCBlcnJvcik7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiRmFpbGVkIHRvIG9wZW4gbmV3IHdpbmRvdyBmb3IgcHJpbnRpbmcuXCIpO1xuICB9XG59XG5cbi8qKlxuICogSGFuZGxlcyB0aGVybWFsIGxhYmVsIHByaW50aW5nLlxuICogQHBhcmFtIGNvbnRlbnQgVGhlIGNvbnRlbnQgdG8gcHJpbnQgKHJhdyB0ZXh0IG9yIGxhYmVsLWZvcm1hdHRlZCBQREYpLlxuICogQHBhcmFtIGlzVGhlcm1hbFByaW50ZXIgQSBmbGFnIHRvIGluZGljYXRlIGlmIHRoZSB0YXJnZXQgcHJpbnRlciBpcyBhIHRoZXJtYWwgcHJpbnRlci5cbiAqIEByZXR1cm5zIEEgUHJvbWlzZSB0aGF0IHJlc29sdmVzIHdoZW4gdGhlIHByaW50IGpvYiBpcyBzZW50LlxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gcHJpbnRUaGVybWFsTGFiZWwoY29udGVudDogc3RyaW5nLCBpc1RoZXJtYWxQcmludGVyOiBib29sZWFuKTogUHJvbWlzZTx2b2lkPiB7XG4gIGlmICghaXNUaGVybWFsUHJpbnRlcikge1xuICAgIGNvbnNvbGUud2FybihcIkF0dGVtcHRlZCB0byBwcmludCB0aGVybWFsIGxhYmVsIHRvIGEgbm9uLXRoZXJtYWwgcHJpbnRlci5cIik7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiTm90IGEgdGhlcm1hbCBwcmludGVyLlwiKTtcbiAgfVxuICB0cnkge1xuICAgIC8vIENhbGwgYmFja2VuZCBjb21tYW5kIGZvciB0aGVybWFsIHByaW50aW5nXG4gICAgYXdhaXQgaW52b2tlKFwicHJpbnRfdGhlcm1hbF9kb2N1bWVudFwiLCB7IGNvbnRlbnQgfSk7XG4gICAgY29uc29sZS5sb2coXCJUaGVybWFsIGxhYmVsIGNvbnRlbnQgc2VudCB0byBwcmludGVyIHN1Y2Nlc3NmdWxseS5cIik7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcihcIkZhaWxlZCB0byBwcmludCB0aGVybWFsIGxhYmVsOlwiLCBlcnJvcik7XG4gICAgdGhyb3cgZXJyb3I7XG4gIH1cbn1cblxuLyoqXG4gKiBVbmlmaWVkIHByaW50aW5nIGZ1bmN0aW9uIHRoYXQgaGFuZGxlcyBkaWZmZXJlbnQgcHJpbnQgc2NlbmFyaW9zLlxuICogQHBhcmFtIG9wdGlvbnMgQW4gb2JqZWN0IGNvbnRhaW5pbmcgcHJpbnRpbmcgb3B0aW9ucy5cbiAqIEBwYXJhbSBvcHRpb25zLmh0bWxDb250ZW50IE9wdGlvbmFsIEhUTUwgY29udGVudCBmb3Igd2luZG93LWJhc2VkIHByaW50aW5nLlxuICogQHBhcmFtIG9wdGlvbnMudGhlcm1hbENvbnRlbnQgT3B0aW9uYWwgY29udGVudCBmb3IgdGhlcm1hbCBwcmludGluZy5cbiAqIEBwYXJhbSBvcHRpb25zLmlzVGhlcm1hbFByaW50ZXIgT3B0aW9uYWwgZmxhZyB0byBpbmRpY2F0ZSBpZiB0aGUgdGFyZ2V0IHByaW50ZXIgaXMgYSB0aGVybWFsIHByaW50ZXIuXG4gKiBAcmV0dXJucyBBIFByb21pc2UgdGhhdCByZXNvbHZlcyB3aGVuIHRoZSBwcmludCBqb2IgaXMgY29tcGxldGVkLlxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gdW5pZmllZFByaW50KHtcbiAgaHRtbENvbnRlbnQsXG4gIHRoZXJtYWxDb250ZW50LFxuICBpc1RoZXJtYWxQcmludGVyID0gZmFsc2UsXG59OiB7XG4gIGh0bWxDb250ZW50Pzogc3RyaW5nO1xuICB0aGVybWFsQ29udGVudD86IHN0cmluZztcbiAgaXNUaGVybWFsUHJpbnRlcj86IGJvb2xlYW47XG59KTogUHJvbWlzZTx2b2lkPiB7XG4gIGlmIChpc1RoZXJtYWxQcmludGVyICYmIHRoZXJtYWxDb250ZW50KSB7XG4gICAgYXdhaXQgcHJpbnRUaGVybWFsTGFiZWwodGhlcm1hbENvbnRlbnQsIHRydWUpO1xuICB9IGVsc2UgaWYgKGh0bWxDb250ZW50KSB7XG4gICAgYXdhaXQgcHJpbnRXaXRoVGF1cmlXaW5kb3coaHRtbENvbnRlbnQpO1xuICB9IGVsc2Uge1xuICAgIHRocm93IG5ldyBFcnJvcihcIk5vIHByaW50YWJsZSBjb250ZW50IHByb3ZpZGVkLlwiKTtcbiAgfVxufVxuIl0sIm5hbWVzIjpbImludm9rZSIsIndyYXBIdG1sV2l0aFByaW50IiwiaHRtbCIsInByaW50V2l0aFRhdXJpV2luZG93IiwiaHRtbENvbnRlbnQiLCJwcmludGFibGVIdG1sIiwiY29uc29sZSIsImxvZyIsImVycm9yIiwiRXJyb3IiLCJwcmludFRoZXJtYWxMYWJlbCIsImNvbnRlbnQiLCJpc1RoZXJtYWxQcmludGVyIiwid2FybiIsInVuaWZpZWRQcmludCIsInRoZXJtYWxDb250ZW50Il0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/utils/printUtils.ts\n"));

/***/ })

});