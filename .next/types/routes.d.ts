// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = "/" | "/billing" | "/billing/history" | "/billing/print/[id]" | "/dashboard" | "/dashboard/analytics" | "/dashboard/billing" | "/dashboard/products" | "/dashboard/settings" | "/dashboard/stores" | "/dashboard/users"
type AppRouteHandlerRoutes = "/api/auth/forgot-password-proxy" | "/api/auth/login" | "/api/bills" | "/api/bills/[id]" | "/api/bills/import" | "/api/notifications" | "/api/notifications/[id]" | "/api/products" | "/api/products/[id]" | "/api/settings" | "/api/stores" | "/api/stores/[id]" | "/api/users" | "/api/users/[id]" | "/api/users/[id]/password"
type PageRoutes = never
type LayoutRoutes = "/"
type RedirectRoutes = never
type RewriteRoutes = never
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes | AppRouteHandlerRoutes


interface ParamMap {
  "/": {}
  "/api/auth/forgot-password-proxy": {}
  "/api/auth/login": {}
  "/api/bills": {}
  "/api/bills/[id]": { "id": string; }
  "/api/bills/import": {}
  "/api/notifications": {}
  "/api/notifications/[id]": { "id": string; }
  "/api/products": {}
  "/api/products/[id]": { "id": string; }
  "/api/settings": {}
  "/api/stores": {}
  "/api/stores/[id]": { "id": string; }
  "/api/users": {}
  "/api/users/[id]": { "id": string; }
  "/api/users/[id]/password": { "id": string; }
  "/billing": {}
  "/billing/history": {}
  "/billing/print/[id]": { "id": string; }
  "/dashboard": {}
  "/dashboard/analytics": {}
  "/dashboard/billing": {}
  "/dashboard/products": {}
  "/dashboard/settings": {}
  "/dashboard/stores": {}
  "/dashboard/users": {}
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
  "/": never
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap, AppRouteHandlerRoutes }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }

  /**
   * Context for Next.js App Router route handlers
   * @example
   * ```tsx
   * export async function GET(request: NextRequest, context: RouteContext<'/api/users/[id]'>) {
   *   const { id } = await context.params
   *   return Response.json({ id })
   * }
   * ```
   */
  interface RouteContext<AppRouteHandlerRoute extends AppRouteHandlerRoutes> {
    params: Promise<ParamMap[AppRouteHandlerRoute]>
  }
}
